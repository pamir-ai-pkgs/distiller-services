#!/bin/sh
set -e

export PATH="/root/.local/bin:/root/.cargo/bin:$HOME/.local/bin:$HOME/.cargo/bin:/usr/local/bin:/usr/bin:/bin:$PATH"

case "$1" in
configure)
	# Set MAC-based hostname only on target device
	if [ -f /boot/armbianEnv.txt ] || [ -f /boot/firmware/config.txt ]; then
		echo "INFO: Setting MAC-based hostname..."
		if [ -x /opt/distiller-cm5-services/scripts/update-hostname.sh ]; then
			/opt/distiller-cm5-services/scripts/update-hostname.sh -v
		fi
	fi

	cd /opt/distiller-cm5-services

	# Setup virtual environment
	[ -d ".venv" ] && rm -rf ".venv"
	if ! uv venv --system-site-packages 2>/dev/null; then
		echo "INFO: Creating venv without system-site-packages..."
		uv venv || {
			echo "WARNING: Failed to create virtual environment with uv"
			exit 1
		}
	fi

	# Install dependencies
	uv sync

	VENV_PATH="/opt/distiller-cm5-services/.venv"

	# Install SDK if available
	[ -d "/opt/distiller-cm5-sdk" ] &&
		uv pip install -e /opt/distiller-cm5-sdk

	# Set permissions
	find /opt/distiller-cm5-services -type d -exec chmod 755 {} \; \
		-o -type f -name "*.py" -exec chmod 755 {} \;
	chmod +x /opt/distiller-cm5-services/distiller_wifi.py

	# Update systemd service
	if [ -f /lib/systemd/system/distiller-wifi.service ]; then
		sed -i "s|/usr/bin/python3|$VENV_PATH/bin/python|g" /lib/systemd/system/distiller-wifi.service
	fi

	# Reload systemd and enable service
	systemctl daemon-reload 2>/dev/null || true
	systemctl enable distiller-wifi.service 2>/dev/null || true

	echo "INFO: Distiller WiFi service installed."
	;;

abort-upgrade | abort-remove | abort-deconfigure) ;;

*)
	echo "ERROR: postinst called with unknown argument \`$1'" >&2
	exit 1
	;;
esac

#DEBHELPER#

exit 0
