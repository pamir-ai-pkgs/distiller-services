#!/bin/sh
set -e

export PATH="/root/.local/bin:/root/.cargo/bin:$HOME/.local/bin:$HOME/.cargo/bin:/usr/local/bin:/usr/bin:/bin:$PATH"

case "$1" in
configure)
	# Stop old service if running
	if systemctl is-active --quiet distiller-wifi.service 2>/dev/null; then
		echo "INFO: Stopping distiller-wifi service for migration..."
		systemctl stop distiller-wifi.service 2>/dev/null || true
		systemctl disable distiller-wifi.service 2>/dev/null || true
	fi

	# Remove old distiller-cm5-services installation completely
	[ -d "/opt/distiller-cm5-services" ] && rm -rf /opt/distiller-cm5-services

	# Set MAC-based hostname only on target device
	if [ -f /boot/armbianEnv.txt ] || [ -f /boot/firmware/config.txt ]; then
		echo "INFO: Setting MAC-based hostname..."
		if [ -x /opt/distiller-services/scripts/update-hostname.sh ]; then
			systemctl is-system-running >/dev/null 2>&1 &&
				/opt/distiller-services/scripts/update-hostname.sh -v
		fi
	fi

	cd /opt/distiller-services

	# Setup virtual environment
	[ -d ".venv" ] && rm -rf ".venv"
	if ! uv venv --system-site-packages 2>/dev/null; then
		echo "INFO: Creating venv without system-site-packages..."
		uv venv || {
			echo "ERROR: Failed to create virtual environment with uv"
			exit 1
		}
	fi

	# Install dependencies
	echo "INFO: Installing dependencies with uv sync..."
	uv sync

	# Install SDK
	uv pip install -e /opt/distiller-sdk

	# Set permissions
	find /opt/distiller-services -type d -exec chmod 755 {} \; \
		-o -type f -name "*.py" -exec chmod 755 {} \;
	chmod +x /opt/distiller-services/distiller_wifi.py

	# Reload systemd and enable service
	systemctl daemon-reload 2>/dev/null || true
	systemctl enable distiller-wifi.service 2>/dev/null || true

	echo "INFO: distiller-services installed successfully."
	echo "INFO: Start service: sudo systemctl start distiller-wifi"
	;;

abort-upgrade | abort-remove | abort-deconfigure) ;;

*)
	echo "ERROR: postinst called with unknown argument \`$1'" >&2
	exit 1
	;;
esac

#DEBHELPER#

exit 0
