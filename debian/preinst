#!/bin/sh
set -e

# Architecture check
check_architecture() {
	arch=$(dpkg --print-architecture)
	if [ "$arch" != "arm64" ]; then
		cat >&2 <<EOF
ERROR: This package is only supported on arm64 architecture.
Current architecture: $arch
Installation cannot proceed.
EOF
		exit 1
	fi
}

# Check for uv package manager
check_uv() {
	# Check common installation paths
	uv_found=false

	if command -v uv >/dev/null 2>&1; then
		uv_found=true
	elif [ -f "/usr/local/bin/uv" ] && [ -x "/usr/local/bin/uv" ]; then
		uv_found=true
	elif [ -f "$HOME/.local/bin/uv" ] && [ -x "$HOME/.local/bin/uv" ]; then
		uv_found=true
	elif [ -f "/root/.local/bin/uv" ] && [ -x "/root/.local/bin/uv" ]; then
		uv_found=true
	fi

	if [ "$uv_found" = false ]; then
		cat >&2 <<EOF
ERROR: uv package manager is required but not installed.

Please install uv first by running:
  curl -LsSf https://astral.sh/uv/install.sh | sh

Or if you prefer wget:
  wget -qO- https://astral.sh/uv/install.sh | sh

After installation, ensure uv is in your PATH and try again.
EOF
		exit 1
	fi
}

# Main logic
case "$1" in
install | upgrade)
	check_architecture
	check_uv

	# Clean up old installations from /opt (migration from 2.x)
	[ -d /opt/distiller-services ] && rm -rf /opt/distiller-services
	[ -d /opt/distiller-cm5-services ] && rm -rf /opt/distiller-cm5-services

	# Clean up old wrapper script if it points to /opt
	[ -f /usr/bin/distiller-wifi ] && {
		if grep -q "/opt/" /usr/bin/distiller-wifi 2>/dev/null; then
			rm -f /usr/bin/distiller-wifi
		fi
	}
	;;

abort-upgrade) ;;

*)
	echo "ERROR: preinst called with unknown argument: $1" >&2
	exit 1
	;;
esac

#DEBHELPER#

exit 0
