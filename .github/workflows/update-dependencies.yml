name: Update Dependencies

on:
  pull_request:
    paths:
      - 'pyproject.toml'
      - 'requirements.txt'

permissions:
  contents: write
  pull-requests: write

jobs:
  update-lock:
    runs-on: ubuntu-latest
    # Only run on Dependabot PRs
    if: github.actor == 'dependabot[bot]' || contains(github.event.pull_request.labels.*.name, 'dependencies')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Use PAT to trigger subsequent workflows
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
          cache-dependency-glob: |
            **/pyproject.toml
            **/requirements.txt

      - name: Update lock file
        run: |
          echo "Updating uv.lock file..."
          uv lock --upgrade

          # Check if lock file was modified
          if git diff --quiet uv.lock; then
            echo "No changes to uv.lock"
          else
            echo "uv.lock was updated"
            git diff --stat uv.lock
          fi

      - name: Verify dependencies
        run: |
          echo "Verifying dependency installation..."
          uv sync --frozen

          # List installed packages
          echo "Installed packages:"
          uv pip list

      - name: Auto-commit lock file changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: 'chore: Update uv.lock for dependency changes'
          file_pattern: uv.lock
          commit_user_name: github-actions[bot]
          commit_user_email: github-actions[bot]@users.noreply.github.com
          commit_author: github-actions[bot] <github-actions[bot]@users.noreply.github.com>

      - name: Comment on PR
        if: steps.auto-commit-action.outputs.changes_detected == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '‚úÖ `uv.lock` has been automatically updated to match the dependency changes.'
            })

  lint-check:
    needs: update-lock
    runs-on: ubuntu-latest
    if: github.actor == 'dependabot[bot]' || contains(github.event.pull_request.labels.*.name, 'dependencies')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true

      - name: Install dependencies
        run: |
          uv sync --frozen
          uv pip install ruff mypy

      - name: Run ruff check
        run: |
          echo "Running ruff linting..."
          uv run ruff check . || echo "Ruff found issues (non-fatal)"

      - name: Run mypy
        run: |
          echo "Running mypy type checking..."
          uv run mypy --ignore-missing-imports --no-strict-optional . || echo "Mypy found issues (non-fatal)"

      - name: Add lint status comment
        if: always()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const lintStatus = `
            ## üîç Dependency Update Lint Check

            The dependency update has been processed. Please review any linting warnings above.

            - ‚úÖ Dependencies synchronized
            - ‚úÖ Lock file updated
            - ‚ö†Ô∏è Review linting output if any issues were found
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: lintStatus
            });
